<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml"
                layout="absolute"
                width="100%"
                height="100%">
  <mx:Panel title="Geocode Address with ArcGIS server locator"
            width="100%"
            height="100%">
    <mx:HBox width="100%"
             height="100%">
      <mx:VBox height="100%"
               width="80%">
        <mx:HBox>
          <mx:Label text="Address"/>
          <mx:TextInput text="380 new york st"
                        id="Address"
                        maxChars="60"
                        width="200"/>
        </mx:HBox>
        <mx:HBox>
          <mx:Label text="City"/>
          <mx:TextInput text="Redlands"
                        id="City"
                        maxChars="20"
                        width="84"/>
        </mx:HBox>
        <mx:HBox>
          <mx:Label text="State"/>
          <mx:TextInput text="CA"
                        id="State"
                        maxChars="20"
                        width="84"/>
        </mx:HBox>
        <mx:HBox>
          <mx:Label text="Zip"/>
          <mx:TextInput text="92373"
                        id="Zip"
                        maxChars="20"
                        width="84"/>
        </mx:HBox>
        <mx:HBox>
          <mx:Button label="Geocode via callback"
                     id="gc0"
                     enabled="false"
                     click="geocode(true)"/>
          <mx:Button label="Geocode via event"
                     id="gc1"
                     enabled="false"
                     click="geocode(false)"/>
         <mx:Button label="Clear Results"
                     id="cls"
                     enabled="false"
                     click="clear()"/>
          <mx:Label text="Running...."
                    id="busy"
                    color="#FF1200"
                    width="131"
                    visible="false"/>
        </mx:HBox>
        <maps:Map xmlns:maps="com.google.maps.*"
                  id="map"
                  mapevent_mapready="onMapReady(event)"
                  width="100%"
                  height="100%"
                  sensor="false" key="ABQIAAAA7QUChpcnvnmXxsjC7s1fCxQGj0PqsCtxKvarsoS-iqLdqZSKfxTd7Xf-2rEc_PC9o8IsJde80Wnj4g"/>


      </mx:VBox>
      <mx:List height="100%"
               width="400"
               id="resultList">

      </mx:List>
    </mx:HBox>

  </mx:Panel>

  <mx:Script>
    <![CDATA[
      import mx.events.ListEvent;
      import mx.controls.*;
      import mx.controls.dataGridClasses.*;
      import com.google.maps.controls.*;
      import com.google.maps.overlays.*;
      import com.google.maps.*;
      import com.google.maps.interfaces.*;

      import com.google.maps.extras.arcgislink.*;

      private var svc:GeocodeService;

      private var results:Array=[];
      private var overlays:Array=[];
      private var bnds:LatLngBounds;

      private function onMapReady(event:Event):void {
        map.setCenter(new LatLng(40, -100), 4);
        map.addControl(new MapTypeControl());
        map.addControl(new NavigationControl());
        map.enableScrollWheelZoom();
        map.enableContinuousZoom();
        svc=new GeocodeService('http://sampleserver1.arcgisonline.com/ArcGIS/rest/services/Locators/ESRI_Geocode_USA/GeocodeServer');

        svc.addEventListener(ServiceEvent.LOAD, function(evt:ServiceEvent):void {
            gc0.enabled=true;
            gc1.enabled=true;
            cls.enabled = true;
          });
        resultList.addEventListener(ListEvent.ITEM_CLICK, function(evt:ListEvent):void {
            var row:int=evt.rowIndex;
            if (overlays[row]) {
              var ov:*=overlays[row];
              ov.dispatchEvent(new MapMouseEvent(MapMouseEvent.CLICK, ov, (ov as Marker).getLatLng()));
            }
          });
      }

      private function geocode(useCallback:Boolean):void {
        map.clearOverlays();
        map.closeInfoWindow();
        results.length=0; //=[];
        overlays=[];
        bnds=new LatLngBounds();
        var inputs:*={};
        var fields:Array=svc.addressFields;
        for (var i:int=0; i < fields.length; i++) {
          inputs[fields[i].name]=this[fields[i].name].text;
        }
        busy.visible=true;
        if (useCallback) {
          svc.findAddressCandidates(new GeocodeParameters({inputs: inputs}), processResults, handleError);
        } else {
          svc.addEventListener(ServiceEvent.GEOCODE_COMPLETE, function(evt:ServiceEvent):void {
              processResults(evt.data as GeocodeResults);
            });
          svc.addEventListener(ServiceEvent.ERROR, function(evt:ServiceEvent):void {
              handleError(evt.data as ServiceError);
            });
          svc.findAddressCandidates(new GeocodeParameters({inputs: inputs}));
        }

      }

      private function processResults(gcRes:GeocodeResults):void {
        busy.visible=false;
        results=[];
        if (gcRes.candidates) {
          for (var i:int=0, c:int=gcRes.candidates.length; i < c; i++) {
            var res:GeocodeResult=gcRes.candidates[i];
            var marker:Marker=createMarker(res);
            map.addOverlay(marker);
            bnds.extend(marker.getLatLng());
            overlays.push(marker);
            results.push(res.address + ' (' + res.score + ')');
          }
          map.setCenter(bnds.getCenter(), map.getBoundsZoomLevel(bnds));
          if (overlays.length > 0) {
            overlays[0].dispatchEvent(new MapMouseEvent(MapMouseEvent.CLICK, overlays[0], overlays[0].getLatLng()));
          }
          resultList.dataProvider=results;
        }
      }

      private function handleError(err:ServiceError):void {
        Alert.show(err.toString());
      }

      private function createMarker(gc:GeocodeResult):Marker {
        var html:String=gc.address + '<br/>' + 'Score:' + gc.score + '<br/>';
        if (gc.attributes) {
          var attrs:*=gc.attributes;
          for (var x:String in attrs) {
            if (attrs.hasOwnProperty(x)) {
              html+=x + attrs[x] + '<br/>';
            }
          }
        }
        var marker:Marker=new Marker(gc.location, new MarkerOptions({tooltip: gc.address}));
        marker.addEventListener(MapMouseEvent.CLICK, function(evt:MapMouseEvent):void {
            marker.openInfoWindow(new InfoWindowOptions({contentHTML: html}));
          });
        return marker;
      }
      private function clear():void {
        map.clearOverlays();
        map.closeInfoWindow();
        results.length=0;
        resultList.dataProvider = results;
      }
      
        
    ]]>
  </mx:Script>
</mx:Application>
